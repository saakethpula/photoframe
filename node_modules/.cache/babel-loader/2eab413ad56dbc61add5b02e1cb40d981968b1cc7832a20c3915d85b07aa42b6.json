{"ast":null,"code":"var _jsxFileName = \"/Users/saakethpula/Downloads/starter_helpi-main 2/photoframe/src/RTC.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RTC = () => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const getMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Error accessing webcam: ', err);\n      }\n    };\n    getMedia();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebRTC Webcam Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(RTC, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = RTC;\nexport default RTC;\nvar _c;\n$RefreshReg$(_c, \"RTC\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","RTC","_s","videoRef","getMedia","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["/Users/saakethpula/Downloads/starter_helpi-main 2/photoframe/src/RTC.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst RTC: React.FC = () => {\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    useEffect(() => {\n        const getMedia = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (err) {\n                console.error('Error accessing webcam: ', err);\n            }\n        };\n\n        getMedia();\n    }, []);\n\n    return (\n        <div>\n            <h1>WebRTC Webcam Access</h1>\n            <video ref={videoRef} autoPlay playsInline />\n        </div>\n    );\n};\n\nexport default RTC;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,MAAM,CAAmB,IAAI,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAIN,QAAQ,CAACO,OAAO,EAAE;UAClBP,QAAQ,CAACO,OAAO,CAACC,SAAS,GAAGN,MAAM;QACvC;MACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAClD;IACJ,CAAC;IAEDR,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BnB,OAAA;MAAOoB,GAAG,EAAEjB,QAAS;MAACkB,QAAQ;MAACC,WAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAACjB,EAAA,CAxBID,GAAa;AAAAsB,EAAA,GAAbtB,GAAa;AA0BnB,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}